[{"path":"https://datapumpernickel.github.io/conflictoR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 conflictoR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/articles/conflictoR.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"conflictoR","text":"conflictoR package provides easy access Uppsala Conflict Data Program (UCDP) API, allowing retrieve analyze conflict data directly R. UCDP world’s main provider data organized violence, offering datasets state-based conflicts, non-state conflicts, one-sided violence.","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/articles/conflictoR.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic Usage","title":"conflictoR","text":"main function conflictoR cl_get_data(), retrieves datasets UCDP API. need specify two parameters: resource: type conflict data (e.g., “ucdpprioconflict”, “nonstate”, “onesided”) version: version dataset (e.g., “24.1”, “23.1”)","code":"# Get state-based conflict data state_conflicts <- cl_get_data(   resource = \"ucdpprioconflict\",   version = \"24.1\" )  # Get non-state conflict data nonstate_conflicts <- cl_get_data(   resource = \"nonstate\",   version = \"24.1\" )  # Get one-sided violence data onesided_conflicts <- cl_get_data(   resource = \"onesided\",   version = \"24.1\" )"},{"path":"https://datapumpernickel.github.io/conflictoR/articles/conflictoR.html","id":"exploring-the-data","dir":"Articles","previous_headings":"","what":"Exploring the Data","title":"conflictoR","text":"Let’s examine structure data:","code":"# View first few rows head(state_conflicts) #>   conflict_id      location              side_a side_a_Id side_a_2nd #> 1       11342         India Government of India       141            #> 2       11342         India Government of India       141            #> 3       11343 Egypt, Israel Government of Egypt       117            #> 4       11343 Egypt, Israel Government of Egypt       117            #> 5       11343 Egypt, Israel Government of Egypt       117            #> 6       11343 Egypt, Israel Government of Egypt       117            #>                 side_b side_b_Id side_b_2nd incompatibility territory_name year #> 1                 GNLA      1163                          1       Garoland 2012 #> 2                 GNLA      1163                          1       Garoland 2014 #> 3 Government of Israel       121                          1     Suez/Sinai 1967 #> 4 Government of Israel       121                          1     Suez/Sinai 1969 #> 5 Government of Israel       121                          1     Suez/Sinai 1970 #> 6 Government of Israel       121                          1     Suez/Sinai 1973 #>   intensity_level cumulative_intensity type_of_conflict start_date start_prec #> 1               1                    0                3 1997-05-29          1 #> 2               1                    0                3 1997-05-29          1 #> 3               2                    1                2 1967-06-05          1 #> 4               1                    1                2 1967-06-05          1 #> 5               1                    1                2 1967-06-05          1 #> 6               2                    1                2 1967-06-05          1 #>   start_date2 start_prec2 ep_end ep_end_date ep_end_prec gwno_a gwno_a_2nd #> 1  2012-11-15           1      1  2012-12-21                750            #> 2  2014-07-01           1      1  2014-11-27                750            #> 3  1967-06-05           1      1  1967-06-10                651            #> 4  1969-03-06           1      0                            651            #> 5  1969-03-06           1      1  1970-08-07                651            #> 6  1973-10-06           1      1  1973-10-24                651            #>   gwno_b gwno_b_2nd gwno_loc region version #> 1                        750      3    24.1 #> 2                        750      3    24.1 #> 3    666            651, 666      2    24.1 #> 4    666            651, 666      2    24.1 #> 5    666            651, 666      2    24.1 #> 6    666            651, 666      2    24.1  # Check available columns names(state_conflicts) #>  [1] \"conflict_id\"          \"location\"             \"side_a\"               #>  [4] \"side_a_Id\"            \"side_a_2nd\"           \"side_b\"               #>  [7] \"side_b_Id\"            \"side_b_2nd\"           \"incompatibility\"      #> [10] \"territory_name\"       \"year\"                 \"intensity_level\"      #> [13] \"cumulative_intensity\" \"type_of_conflict\"     \"start_date\"           #> [16] \"start_prec\"           \"start_date2\"          \"start_prec2\"          #> [19] \"ep_end\"               \"ep_end_date\"          \"ep_end_prec\"          #> [22] \"gwno_a\"               \"gwno_a_2nd\"           \"gwno_b\"               #> [25] \"gwno_b_2nd\"           \"gwno_loc\"             \"region\"               #> [28] \"version\""},{"path":"https://datapumpernickel.github.io/conflictoR/articles/conflictoR.html","id":"filtering-data","dir":"Articles","previous_headings":"","what":"Filtering Data","title":"conflictoR","text":"can filter data directly API call using various parameters:","code":"# Get conflicts for specific years recent_conflicts <- cl_get_data(   resource = \"ucdpprioconflict\",   version = \"24.1\",   year = c(2020, 2021, 2022, 2023) )"},{"path":"https://datapumpernickel.github.io/conflictoR/articles/conflictoR.html","id":"visualizing-conflict-trends","dir":"Articles","previous_headings":"","what":"Visualizing Conflict Trends","title":"conflictoR","text":"One common analysis tracking conflict counts time:","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/articles/conflictoR.html","id":"visualizing-conflict-trends-1","dir":"Articles","previous_headings":"","what":"Visualizing Conflict Trends","title":"conflictoR","text":"One common analysis tracking conflict counts time:","code":"## making a dataframe with all combinations of datasets and versions datasets  = c(\"ucdpprioconflict\", \"nonstate\", \"onesided\") version <- \"24.1\"  ## querying this data using the conflictoR package state <- state_conflicts |>    select(year, conflict_id, version) |>   mutate(     dataset = datasets[1],     year = as.character(year),     version = \"24.1\"   )   nonstate <- nonstate_conflicts |>    select(year, conflict_id, version) |>   mutate(     dataset = datasets[2],     year = as.character(year),     version = \"24.1\"   )   onesided <- onesided_conflicts |>    select(year, conflict_id, version) |>   mutate(     dataset = datasets[3],     year = as.character(year),     version = \"24.1\"   )   ## clean the data to count actual conflicts and merge the sets clean_full_data <- bind_rows(state,                              nonstate,                              onesided) |>   count(year, version, dataset) |>    group_by(year, dataset) |>    mutate(year = as.numeric(year)) colors <- c(   \"ucdpprioconflict\" = \"#D55E00\",    # red for State-Based Violence   \"nonstate\" = \"#009E73\",            # green for Non-State Violence   \"onesided\" = \"#F0E442\"             # yellow for One-Sided Violence )  labels <- c(   \"ucdpprioconflict\" = \"State-Based Violence\",   \"nonstate\" = \"Non-State Violence\",   \"onesided\" = \"One-Sided Violence\" )  # Generate the plot ggplot(data = clean_full_data |>           filter(year >= 1975 & year <= 2023, version == \"24.1\")) +   geom_line(aes(x = year, y = n, color = dataset, group = dataset), size = 1) +   geom_point(aes(x = year, y = n, color = dataset), size = 2) +   scale_color_manual(values = colors,                       labels = labels) +   labs(title = \"Number of Conflicts\", subtitle = \"1975-2023\", caption = \"Uppsala Conflict Data Center, ucdp.uu.se, using version 24.1 of resources 'ucdpprioconflict', 'onesided', 'nonstate'\") +   scale_x_continuous(breaks = seq(1975, 2023, 5)) +   scale_y_continuous(breaks = seq(0, 100, 20), limits = c(0,100)) +   theme_minimal(base_size = 14) +   theme(     plot.background = element_rect(fill = \"black\", color = NA),     panel.background = element_rect(fill = \"black\", color = NA),     panel.grid.major = element_line(color = \"grey20\"),     panel.grid.minor = element_line(color = \"grey30\"),     axis.text = element_text(color = \"white\"),     plot.caption = element_text(color = \"white\", face = \"italic\", size = 7),     axis.title = element_blank(),     plot.title = element_text(color = \"white\", size = 16, face = \"bold\"),     plot.subtitle = element_text(color = \"white\", size = 12),     legend.position = \"bottom\",     legend.title = element_blank(),     legend.text = element_text(color = \"white\", size = 10),     legend.background = element_rect(fill = \"black\", color = NA)   )"},{"path":"https://datapumpernickel.github.io/conflictoR/articles/conflictoR.html","id":"working-with-event-data-ged","dir":"Articles","previous_headings":"","what":"Working with Event Data (GED)","title":"conflictoR","text":"granular analysis, use Georeferenced Event Dataset:","code":"# Get event-level data for a specific region and time period syria_events <- cl_get_data(   resource = \"gedevents\",   version = \"24.1\",   country = 652,   start_date = \"2020-01-01\",   end_date = \"2020-12-31\" )"},{"path":"https://datapumpernickel.github.io/conflictoR/articles/conflictoR.html","id":"available-resources","dir":"Articles","previous_headings":"","what":"Available Resources","title":"conflictoR","text":"conflictoR supports following UCDP resources:","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/articles/conflictoR.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"conflictoR","text":"Always specify version: ensures reproducibility analysis Use filters: API filters efficient downloading data filtering locally Check documentation: Different resources accept different parameters Cite sources: Always cite UCDP specify version used","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/articles/conflictoR.html","id":"further-resources","dir":"Articles","previous_headings":"","what":"Further Resources","title":"conflictoR","text":"UCDP Website UCDP API Documentation Package Repository","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/articles/conflictoR.html","id":"getting-help","dir":"Articles","previous_headings":"","what":"Getting Help","title":"conflictoR","text":"encounter issues questions: Open issue GitHub: https://github.com/datapumpernickel/conflictoR/issues Check function documentation: ?cl_get_data","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Bochtler. Author, maintainer, copyright holder.","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bochtler P (2025). conflictoR: Easily Query Datasets Uppsala Conflict Data Program. R package version 1.0.0, https://datapumpernickel.github.io/conflictoR/.","code":"@Manual{,   title = {conflictoR: Easily Query All Datasets Of The Uppsala Conflict Data Program},   author = {Paul Bochtler},   year = {2025},   note = {R package version 1.0.0},   url = {https://datapumpernickel.github.io/conflictoR/}, }"},{"path":"https://datapumpernickel.github.io/conflictoR/index.html","id":"conflictor-","dir":"","previous_headings":"","what":"Easily Query All Datasets Of The Uppsala Conflict Data Program","title":"Easily Query All Datasets Of The Uppsala Conflict Data Program","text":"goal conflictoR provide user-friendly R interface accessing analyzing conflict data Uppsala Conflict Data Program (UCDP) API. conflictoR, can dynamically fetch, filter, analyze conflict datasets directly source, streamlining research data analysis workflows related global conflicts.","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily Query All Datasets Of The Uppsala Conflict Data Program","text":"can install development version conflictoR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"datapumpernickel/conflictoR\")"},{"path":"https://datapumpernickel.github.io/conflictoR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Easily Query All Datasets Of The Uppsala Conflict Data Program","text":"basic example shows solve common problem:","code":"library(conflictoR)  # Fetch UCDP GED events with specific filters response_ged <- cl_get_data(   resource = \"gedevents\",   version = \"24.1\",   country = c(90, 91, 92), # Guatemala, Honduras, El Salvador   start_date = \"2000-01-01\",   end_date = \"2007-10-12\",   type_of_violence = c(1, 3) )  # Print the response print(response_ged)"},{"path":"https://datapumpernickel.github.io/conflictoR/reference/cl_build_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an API Request for the UCDP Database — cl_build_request","title":"Create an API Request for the UCDP Database — cl_build_request","text":"Constructs API request Uppsala Conflict Data Program (UCDP) API using specified parameters, including resource, API version, page size, page number(s). function allows single multiple page requests.","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/reference/cl_build_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an API Request for the UCDP Database — cl_build_request","text":"","code":"cl_build_request(resource, version, pagesize, page, params)"},{"path":"https://datapumpernickel.github.io/conflictoR/reference/cl_build_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an API Request for the UCDP Database — cl_build_request","text":"resource character string specifying resource path API (e.g., \"conflict\", \"actor\"). version character string indicating version API use (e.g., \"v1\", \"v2\"). pagesize integer specifying number records per page. Must positive number. page integer vector integers indicating page number(s) request. single number provided, function returns single request; vector numbers provided, list requests returned. params list validated params returned cl_check_params.","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/reference/cl_build_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an API Request for the UCDP Database — cl_build_request","text":"single page number provided, function returns httr2_request object. multiple page numbers provided, function returns list httr2_request objects.","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/reference/cl_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve UCDP Dataset from API — cl_get_data","title":"Retrieve UCDP Dataset from API — cl_get_data","text":"function retrieves dataset Uppsala Conflict Data Program (UCDP) API. takes resource type version input parameters, constructs API request, returns combined results pages. function also validates filters input parameters based specified resource ensure compatibility API.","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/reference/cl_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve UCDP Dataset from API — cl_get_data","text":"","code":"cl_get_data(   resource,   version,   country = NULL,   conflict = NULL,   year = NULL,   conflict_incompatibility = NULL,   dyad = NULL,   org = NULL,   conflict_type = NULL,   geography = NULL,   start_date = NULL,   end_date = NULL,   type_of_violence = NULL,   actor = NULL )"},{"path":"https://datapumpernickel.github.io/conflictoR/reference/cl_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve UCDP Dataset from API — cl_get_data","text":"resource character string specifying type resource request. Must one : \"ucdpprioconflict\": State-based conflicts data. \"dyadic\": Dyadic-level conflict data. \"battledeaths\": Data battle-related deaths. \"nonstate\": Non-state conflicts data. \"onesided\": Data one-sided violence. \"gedevents\": Event-based conflict data UCDP GED. version character string specifying version resource request. country vector numeric country codes (Gleditsch Ward codes). Valid resources. Must numeric vector, code corresponds country involved conflict. conflict vector numeric conflict IDs. Valid \"ucdpprioconflict\", \"dyadic\", \"battledeaths\", \"nonstate\" resources. valid \"onesided\" resource. Must numeric vector representing conflict IDs. year vector years YYYY format. Valid resources. Must numeric vector character vector format \"YYYY\". conflict_incompatibility vector numeric conflict incompatibility codes. Valid \"ucdpprioconflict\", \"dyadic\", \"battledeaths\" resources. valid \"nonstate\" \"onesided\" resources. Must numeric vector representing type incompatibility. dyad vector numeric dyad IDs. Valid \"gedevents\", \"dyadic\", \"battledeaths\", \"onesided\" resources. valid \"ucdpprioconflict\" \"nonstate\" resources. Must numeric vector representing dyad IDs. org vector numeric organization IDs. Valid \"nonstate\" resource. valid \"ucdpprioconflict\", \"dyadic\", \"battledeaths\", \"onesided\", \"gedevents\" resources. Must numeric vector representing organization IDs. conflict_type vector numeric conflict type codes. Valid \"ucdpprioconflict\", \"dyadic\", \"battledeaths\" resources. valid \"nonstate\", \"onesided\", \"gedevents\" resources. Must numeric vector representing conflict type codes. geography string specifying geographic bounding box format \"y0 x0,y1 x1\". Valid \"gedevents\" resource. Format: Two coordinates describing bounding box (latitude longitude). Example: \"40 -75,41 -73\" New York City. start_date string specifying start date \"YYYY-MM-DD\" format. Valid \"gedevents\" resource. Must specify date events definitely happened. end_date string specifying end date \"YYYY-MM-DD\" format. Valid \"gedevents\" resource. Must specify date events definitely happened. type_of_violence vector numeric violence type codes. Valid \"gedevents\" resource. Must numeric vector representing types violence. actor vector numeric actor IDs. Valid \"gedevents\" resource. Must numeric vector representing actor IDs.","code":""},{"path":"https://datapumpernickel.github.io/conflictoR/reference/cl_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve UCDP Dataset from API — cl_get_data","text":"data frame containing requested data.","code":""},{"path":[]}]
