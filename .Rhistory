use_r("conflictoR_make_request")
use_r("cl_perform_request")
use_r("cl_process_response")
use_r("cl_get_data")
use_r("zzz")
build()
load_all()
max_page_size
conflictoR:::max_page:size
conflictoR:::max_page_size
?ceiling
tes <- list()
append(tes, "else")
load_all()
load_all()
load_all()
load_all()
#' @param resource A character string specifying the type of resource to request.
#' @param version A character string specifying the version of the resource to request.
#' @return A data frame containing the requested data.
#' @examplesuc
#'
#' ```r
#' # Retrieve UCDP data of type 'ucdpprioconflict' version '21.1'
#' data <- cl_get_data(resource = "ucdpprioconflict", version = "21.1")
#' ```
#' @export
cl_get_data <- function(resource, version) {
## make base request
max_pages_body <- cl_make_request(resource, version, pagesize = 1, page = 1)
last_page <- ceiling(max_pages_body$TotalCount / max_page_size)
reqs <- cl_make_request(resource, version, pagesize = 1, page = 0:last_page) |>
cl_perform_request() |>
cl_process_response()
if (max_pages_body$TotalCount != nrow(resps)) {
cli::cli_abort(message =
c("x"= "Total collected data ({nrow(resps)}) does not match number listed in TotalCount ({max_pages_body$TotalCount})"))
}
return(resps)
}
load_all()
ucdp_get(resource = "battledeaths","24.1")
cl_get_data(resource = "battledeaths","24.1")
isntall()
install()
conflictoR::cl_get_data(resource = "battledeaths","24.1")
devtools::document()
devtools::document()
install()
conflictoR::cl_get_data(resource = "battledeaths","24.1")
install()
conflictoR::cl_get_data(resource = "battledeaths","24.1")
install.packages("rappdirs")
pak::pkg_install("rappdirs", upgrade = T)
install()
use_package("httr2")
use_package("purrr")
use_package("cli")
use_package("httr2")
use_package("purrr")
use_package("cli")
use_package("cli")
use_mit_license()
install()
conflictoR::cl_get_data(resource = "battledeaths","24.1")
install()
pak::pkg_install("httr2", upgrade = T)
conflictoR::cl_get_data(resource = "battledeaths","24.1")
pak::pkg_install("httr2", upgrade = T)
